% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_cumret.R
\name{step_cumret}
\alias{step_cumret}
\alias{tidy.step_cumret}
\title{Calculate cumulative returns based on specified actions}
\usage{
step_cumret(recipe, ..., prices, fee = 0.001, mult = FALSE,
  buy = "buy", sell = "sell", hold = "hold", prefix = "cumret",
  actions = NULL, role = "predictor", trained = FALSE,
  skip = FALSE, id = rand_id("cumret"))

\method{tidy}{step_cumret}(x, info = "terms", ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{One or more selector functions to choose which
variables are affected by the step. See
\link[recipes:selections]{selections (from recipes package)} for more details.}

\item{prices}{A quoted column name which will be used as historical
price data.}

\item{fee}{A \code{numeric} vector pf length one, which will be used
as fee for each trade action.}

\item{mult}{A \code{logical} vector to specify whether to return the cumulative
returns as cash multiplier or just the return. Defaults to \code{FALSE}}

\item{buy}{A \code{character} vector of length one which indicates buy action(s)
inside the selected \code{actions} columns. Default to \code{"buy"}.}

\item{sell}{A \code{character} vector of length one which indicates sell action(s)
inside the selected \code{actions} columns. Default to \code{"sell"}.}

\item{hold}{A \code{character} vector of length one which indicates hold action(s)
inside the selected \code{actions} columns. Default to \code{"hold"}.}

\item{prefix}{A \code{character} vector of length one that would be used
as a prefix to the created columns.}

\item{actions}{A container for selected actions columns. Leave to \code{NULL}
as it will be populated by \link[recipes:prep.recipe]{prep()} function.}

\item{role}{For model terms created by this step, what analysis
role should they be assigned? By default, the function assumes
that the created columns will be used
as \code{"predictors"} in a model.}

\item{trained}{A logical to indicate if the necessary informations for
preprocessing have been estimated.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \link[recipes:bake.recipe]{bake()}? While all operations are baked
when \link[recipes:prep.recipe]{prep()} is run, some operations may not
be able to be conducted on new data (e.g. processing
the outcome variable(s)). Care should be taken when using \code{skip = TRUE}
as it may affect the computations for subsequent operations}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A \code{step_cumret} object.}

\item{info}{Options for \code{tidy()} method; whether to return tidied
information for used \code{"terms"} or \code{"params"}}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any).
}
\description{
\code{step_cumret} creates a \strong{specification} of a recipe
step that will calculate \strong{cumulative returns} from a set of strategy
actions and historical prices.
}
\details{
This step will return the calculated (log) cumulative returns, either just
as a return, or as a cash multiplier for each selected columns.
}
\examples{

# import libs
library(quantrecipes)

# basic usage
rec <- recipe(. ~ ., data = actions) \%>\%
  step_cumret(benchmark, portfolio, prices = "close") \%>\%
  step_naomit(all_predictors()) \%>\%
  prep()

# get preprocessed data
juice(rec)

}
