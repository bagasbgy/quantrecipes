% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_bbands.R
\name{step_bbands}
\alias{step_bbands}
\alias{bbands_thresholds}
\alias{tidy.step_bbands}
\title{Extract Bollinger Bands features}
\usage{
step_bbands(recipe, ..., ma_fun = TTR::SMA, n = 20, sd_mult = 2,
  weights = NULL, ma_options = list(), state = FALSE,
  previous = TRUE, thresholds = bbands_thresholds(),
  prefix = "bbands", h = NULL, l = NULL, c = NULL, type = NULL,
  role = "predictor", trained = FALSE, skip = FALSE,
  id = rand_id("bbands"))

bbands_thresholds(high = 1, medhigh = 0.75, medlow = 0.25, low = 0)

\method{tidy}{step_bbands}(x, info = "terms", ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the
sequence of operations for this recipe.}

\item{...}{Either three or one (unquoted) column name(s). If three columns
are given, it will represent the \code{"high"}, \code{"low"}, and \code{"close"} prices,
respectively. Otherwise, if only one column name is given, it will treated
as \code{"close"} price.}

\item{ma_fun}{A \code{function} to extract moving average, or a \code{character}
vector of length one which specify a moving average function.
Defaults to \link[TTR:SMA]{TTR::SMA}.}

\item{n}{A \code{numeric} vector of length one which specify
the moving average window.}

\item{sd_mult}{A \code{numeric} vector of length one which specify
standard deviation multiplier. The default is \code{2}.}

\item{weights}{A \code{character} vector of length one that specify a column name,
or a \code{numeric} vector for \code{ma_fun} that has \code{wts} or \code{volume} argument.
See details for more information.}

\item{ma_options}{A \code{list} of additional argument(s) that would be passed
to \code{ma_fun} function.}

\item{state}{An option to specify whether to return
the current states of the Bollinger Bands. Defaults to \code{FALSE}.}

\item{previous}{An option to specify whether to return
the summary of previous states. Defaults to \code{TRUE} and
only works if \code{state = TRUE}.}

\item{thresholds}{A \code{list} of threshold that would be used
as state determination. See details for further information.}

\item{prefix}{A \code{character} vector of length one that would be used
as a prefix to the created columns.}

\item{h}{A container for the names of \code{"high"}. Leave to \code{NULL}
as it will be populated by \link[recipes:prep.recipe]{prep()} function.}

\item{l}{A container for the names of \code{"low"}. Leave to \code{NULL}
as it will be populated by \link[recipes:prep.recipe]{prep()} function.}

\item{c}{A container for the names of \code{"close"}. Leave to \code{NULL}
as it will be populated by \link[recipes:prep.recipe]{prep()} function.}

\item{type}{A container for the final series type that
would be used (\code{"hlc"} or \code{"c"}). Leave to \code{NULL} as it will be
populated by \link[recipes:prep.recipe]{prep()} function.}

\item{role}{For model terms created by this step, what analysis
role should they be assigned? By default, the function assumes
that the created columns will be used
as \code{"predictors"} in a model.}

\item{trained}{A logical to indicate if the necessary informations for
preprocessing have been estimated.}

\item{skip}{A logical. Should the step be skipped when the
recipe is baked by \link[recipes:bake.recipe]{bake()}? While all operations are baked
when \link[recipes:prep.recipe]{prep()} is run, some operations may not
be able to be conducted on new data (e.g. processing
the outcome variable(s)). Care should be taken when using \code{skip = TRUE}
as it may affect the computations for subsequent operations}

\item{id}{A character string that is unique to this step to identify it.}

\item{high}{Threshold for \code{"high"} state; see details sections.}

\item{medhigh}{Threshold for \code{"medhigh"} state; see details sections.}

\item{medlow}{Threshold for \code{"medlow"} state; see details sections.}

\item{low}{Threshold for \code{"low"} state; see details sections.}

\item{x}{A \code{step_bbands} object.}

\item{info}{Options for \code{tidy()} method; whether to return tidied
information for used \code{"terms"} or \code{"params"}}
}
\value{
An updated version of \code{recipe} with the new step
added to the sequence of existing steps (if any).
}
\description{
\code{step_bbands} creates a \strong{specification} of a recipe
step that will extract \strong{Bollinger Bands} features from an asset price
historical data.
}
\details{
The output from this step are several new columns
which contains the extracted Bollinger Bands features.

For basic output, this step will produces:
\itemize{
\item \code{dn}: lower band
\item \code{ma}: moving average
\item \code{up}: upper band
\item \code{pctb}: calculated percentage B
}

If \code{state} argument is \code{TRUE}, it will also produces:
\itemize{
\item \code{state}: current percentage B state
\item \code{state_count}: cumulative count in current state
}

These states are determined using four different threshold, which listed
in \code{thresholds} arguments. These are the default threshold values:
\itemize{
\item \code{high}: \code{pctb > high} (the default is \code{high = 1})
\item \code{medhigh}: \code{high > pctb > medhigh} (the default is \code{medhigh = 0.75})
\item \code{medlow}: \code{low < pctb < medlow} (the default is \code{medlow = 0.25})
\item \code{low}: \code{pctb < low} (the default is \code{low = 0})
}

Note: that the rest values would be categorized as \code{"medium"}.

Those default values are produced from \code{bbands_thresholds()}
helper functions; any modification to the threshold could be made through
this helper functions. See examples for some demonstrations.

Additionally, if \code{previous} argument is \code{TRUE}, it will also provides
some summary regarding previous Bollinger Bands states:
\itemize{
\item \code{prev_state}: previous state
\item \code{prev_medium}: previous medium-state (\code{"medhigh"}, \code{"medlow"})
\item \code{prev_break}: previous break-state (\code{"high"}, \code{"low"})
}
}
\examples{

# import libs
library(quantrecipes)

# basic usage
rec <- recipe(. ~ ., data = btcusdt) \%>\%
  step_bbands(high, low, close) \%>\%
  step_naomit(all_predictors()) \%>\%
  prep()

# get preprocessed data
juice(rec)

# using state argument
rec <- recipe(. ~ ., data = btcusdt) \%>\%
  step_bbands(high, low, close, state = TRUE) \%>\%
  step_naomit(all_predictors()) \%>\%
  prep()

# get preprocessed data
juice(rec)

# modify the threshold
rec <- recipe(. ~ ., data = btcusdt) \%>\%
  step_bbands(high, low, close, state = TRUE, thresholds = bbands_thresholds(
    high = 0.9, medhigh = 0.65, medlow = 0.35, low = 0.1
  )) \%>\%
  step_naomit(all_predictors()) \%>\%
  prep()

# get preprocessed data
juice(rec)

}
